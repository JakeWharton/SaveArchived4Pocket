import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile

buildscript {
	repositories {
		mavenCentral()
		google()
	}
	dependencies {
		classpath(libs.kotlin.gradlePlugin)
		classpath(libs.kotlin.serializationPlugin)
		classpath(libs.androidGradlePlugin)
		classpath(libs.spotlessPlugin)
		classpath(libs.sqldelight.plugin)
		classpath(libs.paparazziPlugin)
	}
}

subprojects {
	apply plugin: 'com.diffplug.spotless'
	spotless {
		kotlin {
			target("src/**/*.kt")
			ktlint(libs.ktlint.get().version).editorConfigOverride([
				'ktlint_standard_filename': 'disabled',
				'ktlint_function_naming_ignore_when_annotated_with': 'Composable',
			])
		}
	}

	tasks.withType(KotlinJvmCompile).configureEach {
		compilerOptions {
			jvmTarget.set(JvmTarget.JVM_11)
			freeCompilerArgs.addAll([
				'-progressive', // https://kotlinlang.org/docs/whatsnew13.html#progressive-mode
				'-Xjvm-default=all',
			])
		}
	}

	plugins.withId('com.android.base') {
		android {
			defaultConfig {
				minSdk 33
				compileSdk 34
			}
			compileOptions {
				sourceCompatibility JavaVersion.VERSION_11
				targetCompatibility JavaVersion.VERSION_11
			}
			composeOptions {
				kotlinCompilerExtensionVersion = libs.androidx.compose.compiler.get().version
			}
		}
	}
}

def propOrEmpty(String name) {
	return hasProperty(name) ? getProperty(name) : ''
}
